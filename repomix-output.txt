This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repomix on: 2024-12-21T17:37:54.872Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repomix's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repomix, visit: https://github.com/yamadashy/repomix

================================================================
Repository Structure
================================================================
public/
  favicon.svg
src/
  components/
    About.astro
    CertificateCard.astro
    CompetitionCard.astro
    Footer.astro
    Hero.astro
    Navbar.astro
    ProjectCard.astro
    SkillCard.astro
    Skills.astro
    TimeLine.astro
  content/
    certificate.json
    competition.json
    experience.json
    projects.json
    skill.json
  layouts/
    Layout.astro
  pages/
    certificate.astro
    competition.astro
    index.astro
    project.astro
  script/
    date.ts
    fetchCertificate.ts
    fetchCompetition.ts
    fetchProject.ts
  types/
    competition.d.ts
    project.d.ts
  env.d.ts
.gitignore
astro.config.mjs
package.json
README.md
tailwind.config.mjs
tsconfig.json

================================================================
Repository Files
================================================================

================
File: public/favicon.svg
================
<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 128 128">
    <path d="M50.4 78.5a75.1 75.1 0 0 0-28.5 6.9l24.2-65.7c.7-2 1.9-3.2 3.4-3.2h29c1.5 0 2.7 1.2 3.4 3.2l24.2 65.7s-11.6-7-28.5-7L67 45.5c-.4-1.7-1.6-2.8-2.9-2.8-1.3 0-2.5 1.1-2.9 2.7L50.4 78.5Zm-1.1 28.2Zm-4.2-20.2c-2 6.6-.6 15.8 4.2 20.2a17.5 17.5 0 0 1 .2-.7 5.5 5.5 0 0 1 5.7-4.5c2.8.1 4.3 1.5 4.7 4.7.2 1.1.2 2.3.2 3.5v.4c0 2.7.7 5.2 2.2 7.4a13 13 0 0 0 5.7 4.9v-.3l-.2-.3c-1.8-5.6-.5-9.5 4.4-12.8l1.5-1a73 73 0 0 0 3.2-2.2 16 16 0 0 0 6.8-11.4c.3-2 .1-4-.6-6l-.8.6-1.6 1a37 37 0 0 1-22.4 2.7c-5-.7-9.7-2-13.2-6.2Z" />
    <style>
        path { fill: #000; }
        @media (prefers-color-scheme: dark) {
            path { fill: #FFF; }
        }
    </style>
</svg>

================
File: src/components/About.astro
================
<div class='relative bg-white overflow-hidden mt-16'>
  <div class='max-w-7xl mx-auto'>
    <div
      class='relative z-10 pb-8 bg-white sm:pb-16 md:pb-20 lg:max-w-2xl lg:w-full lg:pb-28 xl:pb-32'
    >
      <svg
        class='hidden lg:block absolute right-0 inset-y-0 h-full w-32 text-white transform translate-x-1/2'
        fill='currentColor'
        viewBox='0 0 100 100'
        preserveAspectRatio='none'
        aria-hidden='true'
      >
        <polygon points='50,0 100,0 50,100 0,100'></polygon>
      </svg>

      <div class='pt-1'></div>

      <main
        class='mt-10 mx-auto max-w-7xl px-4 sm:mt-12 sm:px-6 md:mt-16 lg:mt-20 lg:px-8 xl:mt-28'
      >
        <div class='sm:text-center lg:text-left'>
          <div class='pb-6 flex flex-col gap-4 container mx-auto'>
            <p class='text-sm text-designColor tracking-[4px] uppercase'>
              Profile
            </p>
            <h2 class='text-3xl md:text-4xl font-bold'>About Me</h2>
          </div>
          <p>
            I am a dedicated and passionate computer engineering student
            enrolled at King Mongkut's Institute of Technology Ladkrabang
            (KMITL), currently in the CE 61 program. Alongside my academic
            pursuits, I hold the esteemed position of secretary at the SAIG
            Laboratory, where I actively contribute to and engage in
            cutting-edge research and projects within the realm of computer
            engineering. My fervor for technology extends specifically to web
            development, where I find both challenge and inspiration. I am
            driven by a relentless curiosity to explore the intricacies of
            creating seamless and innovative web experiences. Through my
            academic journey and involvement in the SAIG Laboratory.
          </p>
        </div>
      </main>
    </div>
  </div>
  <div class='lg:absolute lg:inset-y-0 lg:right-0 lg:w-1/2'>
    <img
      class='h-56 w-full object-cover object-top sm:h-72 md:h-96 lg:h-full'
      src='/profile.jpeg'
      alt='profile'
    />
  </div>
</div>

================
File: src/components/CertificateCard.astro
================
---
const { name, position, image } = Astro.props;
Astro.props;
---

<div class='group flex flex-col gap-4 transition-all hover:scale-[1.005] cursor-pointer'>
  <img class='aspect-video w-full bg-neutral-200' src={`${image}`} alt={name} />
  <div class='grid gap-1'>
    <h3 class='text-xl font-medium underline-offset-2 group-hover:underline'>
      {name}
    </h3>
    <div>
      {position}
    </div>
  </div>
</div>

================
File: src/components/CompetitionCard.astro
================
---
const { name, duration, location, position, image, link } =
  Astro.props;
---

<a
  class='group flex flex-col gap-4 transition-all hover:scale-[1.005]'
  href={link}
>
  <img class='aspect-video w-full bg-neutral-200' src={`${image}`} alt={name} />
  <div class='grid gap-1'>
    <h3 class='text-xl font-medium underline-offset-2 group-hover:underline'>
      {name}
    </h3>
    <div>
      {position}
    </div>
    <div class='text-sm text-neutral-500'>
      {duration} | {location}
    </div>
  </div>
</a>

================
File: src/components/Footer.astro
================
---
let year = new Date().getFullYear();
---

<footer class='bg-white rounded-lg shadow font-jamjuri'>
  <div
    class='w-full mx-auto max-w-screen-xl p-4 md:flex md:items-center md:justify-between'
  >
    <span class='text-sm text-gray-500 sm:text-center dark:text-gray-400'
      >© {year}
      <a href='/' class='hover:underline'>khris-xp™</a>. All Rights Reserved.
    </span>
    <ul
      class='flex flex-wrap items-center mt-3 text-sm font-medium text-gray-500 dark:text-gray-400 sm:mt-0'
    >
      <li>
        <a
          href='https://www.facebook.com/khris.bharmmano/'
          class='hover:underline me-4 md:me-6'>Facebook</a
        >
      </li>
      <li>
        <a
          href='https://www.instagram.com/khris_xp/'
          class='hover:underline me-4 md:me-6'>Instagram</a
        >
      </li>
      <li>
        <a
          href='https://github.com/khris-xp'
          class='hover:underline me-4 md:me-6'>Github</a
        >
      </li>
      <li>
        <a href='mailto:khrisbharmmano@gmail.com' class='hover:underline'
          >Gmail</a
        >
      </li>
    </ul>
  </div>
</footer>

================
File: src/components/Hero.astro
================
<div class='relative isolate px-6 lg:px-8'>
  <div
    class='absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80'
    aria-hidden='true'
  >
  </div>
  <div class='mx-auto max-w-2xl py-32'>
    <div class='text-center'>
      <h1 class='text-4xl font-bold tracking-tight text-gray-900 sm:text-6xl'>
        Hey there, I'm <span class='text-indigo-600'>khris-xp</span>
      </h1>
      <p class='mt-6 text-lg leading-8 text-gray-600'>
        A passionate computer engineering student at KMITL (CE 61) and secretary
        of SAIG Laboratory. Interested in Web development.
      </p>
      <div class='mt-10 flex items-center justify-center gap-x-6'>
        <a
          href='https://github.com/khris-xp'
          class='rounded-md bg-indigo-600 px-3.5 py-2.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600'
          >Explore my Github</a
        >
        <a href='/' class='text-sm font-semibold leading-6 text-gray-900'
          >Learn more <span aria-hidden='true'>→</span></a
        >
      </div>
    </div>
  </div>
</div>

================
File: src/components/Navbar.astro
================
<div class='navbar bg-base-100 font-jamjuri'>
  <div class='navbar-start'>
    <div class='dropdown'>
      <div tabindex={0} role='button' class='btn btn-ghost lg:hidden'>
        <svg
          xmlns='http://www.w3.org/2000/svg'
          class='h-5 w-5'
          fill='none'
          viewBox='0 0 24 24'
          stroke='currentColor'
          ><path
            stroke-linecap='round'
            stroke-linejoin='round'
            stroke-width='2'
            d='M4 6h16M4 12h8m-8 6h16'></path></svg
        >
      </div>
      <ul
        class='menu menu-sm dropdown-content mt-3 z-[1] p-2 shadow bg-base-100 rounded-box w-52'
      >
        <li><a href='/'>Home</a></li>
        <li><a href='/project'>Projects</a></li>
        <li><a href='/competition'>Competition</a></li>
        <li><a href='/certificate'>Certificate</a></li>
      </ul>
    </div>
    <a href='/' class='btn btn-ghost text-xl'>Khris-xp Website</a>
  </div>
  <div class='navbar-end hidden lg:flex'>
    <ul class='menu menu-horizontal px-1 text-base'>
      <li><a href='/'>Home</a></li>
      <li><a href='/project'>Projects</a></li>
      <li><a href='/competition'>Competition</a></li>
      <li><a href='/certificate'>Certificate</a></li>
    </ul>
  </div>
</div>

================
File: src/components/ProjectCard.astro
================
---
const { name, link, image, technologies, position } = Astro.props;
---

<a
  class='group flex flex-col gap-4 transition-all hover:scale-[1.005]'
  href={link}
>
  <img class='aspect-video w-full bg-neutral-200' src={`${image}`} alt={name} />
  <div class='grid gap-1'>
    <h3 class='text-xl font-medium underline-offset-2 group-hover:underline'>
      {name}
    </h3>
    <div>
      {position}
    </div>
    <div class='text-sm text-neutral-500'>
      {
        technologies.map((technology: string) => (
          <span class='inline-block mr-2'>{technology}</span>
        ))
      }
    </div>
  </div>
</a>

================
File: src/components/SkillCard.astro
================
---
const { name, image, category } = Astro.props;
---

<div class='overflow-x-hidden'>
  <div class='flex items-start rounded-xl bg-white p-4 shadow-lg'>
    <div
      class='flex h-12 w-12 items-center justify-center rounded-full border border-purple-100 bg-purple-50'
    >
      <img src={image} class='w-6 h-6' />
    </div>
    <div class='ml-4'>
      <h2 class='font-semibold'>{name}</h2>
      <p class='mt-2 text-sm text-gray-500'>{category}</p>
    </div>
  </div>
</div>

================
File: src/components/Skills.astro
================
---
import SkillCard from '../components/SkillCard.astro';
import skill from '../content/skill.json';
---

<div class='flex justify-center'>
  <div
    class='grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-10'
  >
    {
      skill.skills.map((item, index) => (
        <SkillCard
          key={index}
          name={item.name}
          image={item.image}
          category={item.category}
        />
      ))
    }
  </div>
</div>

================
File: src/components/TimeLine.astro
================
---
import experience from '../content/experience.json';
import { calculateExperingDate } from 'script/date';

const experienceData = experience.experience;
---

<section>
  <div class='grid lg:grid-cols-2 grid-cols-1 gap-x-12 gap-y-10'>
    {
      experienceData.map((experience) => (
        <div class='flex items-start lg:gap-x-6 gap-x-4 max-w-2xl relative before:absolute before:bottom-0 before:top-[5rem] before:left-9 before:w-[1px] before:h-[calc(100%-70px)] dark:before:bg-zinc-800 before:bg-zinc-200'>
          <a
            href='/'
            rel='noreferrer noopener'
            target='_blank'
            class='grid place-items-center dark:bg-primary-bg bg-secondary-bg border dark:border-zinc-800 border-zinc-200 min-h-[80px] min-w-[80px] p-2 rounded-md overflow-clip relative'
          >
            <img
              src={experience.image}
              class='object-cover duration-300 w-12 h-12'
              alt={`${experience.company} logo`}
            />
          </a>
          <div class='flex flex-col items-start'>
            <h3 class='text-xl font-bold'>{experience.company}</h3>
            <p>{experience.designation}</p>
            <time class='text-sm text-zinc-500 mt-2 tracking-widest uppercase'>
              {experience.duration} | {calculateExperingDate(experience.startDate, experience.endDate)}
            </time>
            <p class='tracking-tight dark:text-zinc-400 text-zinc-600 my-4'>
              {experience.description}
            </p>
          </div>
        </div>
      ))
    }
  </div>
</section>

================
File: src/content/certificate.json
================
{
  "certificate": [
    {
      "name": "Certificate of Internship in Frontend Developer",
      "position": "Frontend Developer",
      "image": "/certificate/DevMountain.png"
    },
    {
      "name": "Project Management Essentials",
      "position": "Project Management",
      "image": "/certificate/project-management-essential.png"
    }
  ]
}

================
File: src/content/competition.json
================
{
  "competition": [
    {
      "name": "Student Hacks",
      "description": "Create software to better society and gain vital experience to boost your future career",
      "duration": "Jul 2024 - Nov 2024",
      "location": "Online",
      "position": "Full Stack Developer and Project Manager",
      "image": "/competition/what-the-hack.png",
      "link": "https://studenthacks.devpost.com/?ref_content=default&ref_feature=challenge&ref_medium=portfolio"
    },
    {
      "name": "CyberHacks",
      "description": "Powered by High Schoolers to give beginners an intro to the world of engineering and computer programming. It is a great beginner to intermediate hackathon.",
      "duration": "Jul 2024 - Nov 2024",
      "location": "Online",
      "position": "Full Stack Developer and Project Manager",
      "image": "/competition/cyber-hacks.png",
      "link": "https://cyberhacks.devpost.com/?ref_content=default&ref_feature=challenge&ref_medium=portfolio"
    },
    {
      "name": "TechHacks By TechTalks",
      "description": "Powered by High Schoolers to give beginners an intro to the world of engineering and computer programming. It is a great beginner to intermediate hackathon.",
      "duration": "Jul 2024 - Nov 2024",
      "location": "Online",
      "position": "Full Stack Developer and Project Manager",
      "image": "/competition/tech-hacks.png",
      "link": "https://tthacks.devpost.com/?ref_content=default&ref_feature=challenge&ref_medium=portfolio"
    },
    {
      "name": "EduLearns - The Biggest Summer Hackathon",
      "description": "Powered by High Schoolers to give beginners an intro to the world of engineering and computer programming. It is a great beginner to intermediate hackathon.",
      "duration": "Jul 2024 - Nov 2024",
      "location": "Online",
      "position": "Full Stack Developer and Project Manager",
      "image": "/competition/edulearn.png",
      "link": "https://elsummer.devpost.com/"
    },
    {
      "name": "Zero to One Hackathon by Convex",
      "description": "Build fullstack apps at light speed with Convex.",
      "duration": "Jan 2024 - Mar 2024",
      "location": "Online",
      "position": "Full Stack Developer",
      "image": "/competition/zero-to-convex.png",
      "link": "https://convexhackathon.devpost.com/"
    },
    {
      "name": "Solstice by APEERS",
      "description": "Hey there! At APEERS, we strive to provide students with equal opportunities when it comes to education and extracurricular activities. As part of this mission, we host free events that inspire students in a plethora of fields. In the past, we have hosted three events with nearly $100k in prizes and well over 700 participants (https://apeers.org/events). ",
      "duration": "June 2024 - July 2024",
      "location": "Online",
      "position": "Full Stack Developer & Project Manager",
      "image": "/competition/solstice-by-apeers.png",
      "link": "https://apeers-solstice.devpost.com"
    },
    {
      "name": "Code in the Wind #2",
      "description": "ร่วมสนุกกับกิจกรรมทดสอบความเร็วและทักษะด้าน frontend โดยผู้ร่วมสนุกจะได้รับภาพตัวอย่างเป็นดีไซน์ และมีเวลา 10 นาทีในการเขียนโค้ดเพื่อขึ้นหน้าเว็บตามแบบด้วย HTML และ Tailwind CSS",
      "duration": "May 2024 - May 2024",
      "location": "Bangkok, Thailand",
      "position": "Frontend Developer",
      "image": "/competition/code-wind.png",
      "link": "https://www.eventpop.me/e/26957/wind2"
    },
    {
      "name": "Shenanihacks",
      "description": "A test hackathon to test-run our backend systems",
      "duration": "December 2023 - December 2023",
      "location": "Online",
      "position": "Full Stack Developer",
      "image": "/competition/shenanihack.png",
      "link": "https://wafflehackstesting.devpost.com/?ref_feature=challenge&ref_medium=your-open-hackathons&ref_content=Submissions+open"
    },
    {
      "name": "Application development competition for carbon offset in small business units",
      "description": "Complete in our Application Development Challenge for Small Business Carbon Offset. Create solutions fostering eco- friendly practices, enabling small business to measure and offset their carbon footprint. My teamwork joined promote sustainability through innovative applications.",
      "duration": "March 2023 - November 2023",
      "location": "Bangkok, Thailand",
      "position": "Frontend Developer",
      "image": "/competition/carbon.webp",
      "link": "https://cep.or.th/carbonapp-01/"
    },
    {
      "name": "The โง่ Hackathon ครั้งที่ 7 เเห่งประเทศ Thailand",
      "description": "The Stupid Hackathon in Thailand is a hackathon that does not have a business or competition purpose. The main goal is for makers to have fun and release crazy projects that no one else wants. There is no business focus on whether this product will actually work or not. By emphasizing that everyone can have fun together.",
      "duration": "June 2023 - June 2023",
      "location": "Bangkok, Thailand",
      "position": "Frontend Developer",
      "image": "/competition/stupid-hackathon.jpg",
      "link": "https://stupid.hackathon.in.th/7/"
    },
    {
      "name": "DEV HACK “World of Hackathon”",
      "description": "Mr.FOX and <DEVCLUB> organized a hackathon at Mr.FOX Live House to solve application development challenges for Creator Platforms, with prizes worth over 15,000 Baht from top technology companies.",
      "duration": "March 2023 - March 2023",
      "location": "Bangkok, Thailand",
      "position": "Frontend Developer",
      "image": "/competition/dev-hack.jpg",
      "link": "https://www.youtube.com/watch?v=C74uTzPNpNE"
    }
  ]
}

================
File: src/content/experience.json
================
{
  "experience": [
    {
      "company": "Kryptodian Co., Ltd.",
      "designation": "Junior Full Stack Developer",
      "duration": "January 2024 - Present",
      "startDate": "2024-01-05",
      "endDate": "Present",
      "location": "Bangkok, Thailand",
      "image": "/experience/kryptodian.png",
      "description": "Worked with the project Kryptodian to develop a platform comprehensive infrastructure for your digital assets that offer custody, trade, staking, treasury operations and governance in the same solution."
    },
    {
      "company": "Innovation for social solidarity and inclusive economy in Asia",
      "designation": "Frontend Developer",
      "duration": "July 2023 - Present",
      "startDate": "2023-07-11",
      "endDate": "Present",
      "location": "Bangkok, Thailand",
      "image": "/experience/tamsang-tamsong.png",
      "description": "Collaborated with Chulalongkorn University to develop Tamsang-Tamsong. On-Demand Delivery Platform to Foster Social Solidarity Economy in Thailand."
    },
    {
      "company": "Dev Mountain Camp",
      "designation": "Frontend Developer Internship",
      "duration": "June 2023 - July 2023",
      "startDate": "2023-06-1",
      "endDate": "2023-07-31",
      "location": "Bangkok, Thailand",
      "image": "/experience/devmountain.jpeg",
      "description": "Internship, frontend developer role, Wizglee project involvement, responsibilities for marketplace and admin dashboard in the development of a digital access trading platform."
    },
    {
      "company": "POWs Solution Co., Ltd.",
      "designation": "IT Support and Software Developer",
      "duration": "April 2021 - August 2023",
      "startDate": "2021-04-01",
      "endDate": "2023-08-31",
      "location": "Bangkok, Thailand",
      "image": "/experience/pow-solution.png",
      "description": "In the company, assumed responsibilities as an IT support specialist overseeing the Learning Management System (LMS) for the Careervio product."
    },
    {
      "company": "POWs Solution Co., Ltd.",
      "designation": "IT Support Internship",
      "duration": "February 2021 - April 2021",
      "startDate": "2021-02-01",
      "endDate": "2021-04-30",
      "location": "Bangkok, Thailand",
      "image": "/experience/pow-solution.png",
      "description": "In the company, assumed responsibilities as an IT support specialist overseeing the Learning Management System (LMS) for the Careervio product."
    }
  ]
}

================
File: src/content/projects.json
================
{
  "projects": [
    {
      "name": "Play to win",
      "description": "Play to Win is a web application that allows users to play games and earn money. It is a platform where users can play games, earn money, and withdraw money.",
      "image": "/content/play-to-win.png",
      "links": "https://github.com/khris-xp",
      "technologies": ["Nextjs", "TailwindCSS", "Go Echo", "MongoDB"],
      "position": "Full Stack Developer"
    },
    {
      "name": "EduSAIG",
      "description": "EduSaig revolutionizes online education by combining cutting-edge AI technology with personalized learning experiences.",
      "image": "/content/edusaig.png",
      "links": "https://www.edusaig.com",
      "technologies": ["Nextjs", "Nestjs", "Postgresql", "TailwindCSS"],
      "position": "Full Stack Developer and Project Manager"
    },
    {
      "name": "Eventgenda",
      "description": "Eventgenda is a web application that allows users to create, manage, and share events. It is a platform where users can create events, funding events, and join events.",
      "image": "/content/eventgenda.png",
      "links": "https://github.com/khris-xp/eventgenda",
      "technologies": [
        "Nextjs",
        "Nodejs",
        "MongoDB",
        "TailwindCSS",
        "Material UI",
        "Zustand"
      ],
      "position": "Full Stack Developer"
    },
    {
      "name": "NoRegEX",
      "description": "Theory of computation web application for learning regular expression.",
      "image": "/content/noregex.png",
      "links": "https://toc.onionstreasure.com",
      "technologies": ["Nextjs", "TailwindCSS"],
      "position": "Frontend Developer"
    },
    {
      "name": "Rug Pull",
      "description": "SAIG Web Application for registered training session and submit project.",
      "image": "/content/rug-pull.png",
      "links": "https://rug-pull-mocha.vercel.app",
      "technologies": ["React", "Nodejs", "MongoDB", "TailwindCSS", "Redux"],
      "position": "Full Stack Developer"
    },
    {
      "name": "Tangti",
      "description": "Web Application Development Project.",
      "image": "/content/tangti.png",
      "links": "https://kmitltangti.azurewebsites.net",
      "technologies": ["ASP.net Core MVC", "MongoDB"],
      "position": "Full Stack Developer"
    },
    {
      "name": "Bubble Tea Cafe API",
      "description": "Web Development CEIP Project.",
      "image": "/content/go-fiber.webp",
      "links": "https://github.com/khris-xp/bubble-tea-cafe-api",
      "technologies": ["Go Fiber", "MongoDB"],
      "position": "Backend Developer"
    },
    {
      "name": "Coffee Shop Starbo",
      "description": "Coffee Shop Starbo is a web application for ordering coffee online.",
      "image": "/content/coffee-shop-starbo.png",
      "links": "https://aesthetic-parfait-b450cb.netlify.app",
      "technologies": ["React", "Typescript", "Tailwindcss"],
      "position": "Frontend Developer"
    },
    {
      "name": "Digital Mint Exchange",
      "description": "Your secure and user-friendly hub for buying and selling cryptocurrencies. Trade effortlessly with real-time data and a diverse range of assets. Explore the digital market confidently with us.",
      "image": "/content/digital-mint-exchange.png",
      "links": "https://github.com/khris-xp/digital-mint-exchange",
      "technologies": [
        "React",
        "Tailwindcss",
        "DaisyUI",
        "NestJs",
        "Postgresql"
      ],
      "position": "Full Stack Developer"
    },
    {
      "name": "Dishdeck API",
      "description": "Platform for sharing detailed food recipes, perfect for food enthusiasts and bloggers to explore and contribute to a rich culinary knowledge base.",
      "image": "/content/go-fiber.webp",
      "links": "https://github.com/khris-xp/dishdeck-api",
      "technologies": ["Go Fiber", "MongoDB"],
      "position": "Backend Developer"
    },
    {
      "name": "open.source.in.th",
      "description": "Platform for sharing detailed food recipes, perfect for food enthusiasts and bloggers to explore and contribute to a rich culinary knowledge base.",
      "image": "/content/open-source-in-th.png",
      "links": "https://open.source.in.th",
      "technologies": ["Astro", "TailwindCSS"],
      "position": "Frontend Developer"
    },
    {
      "name": "X-Clone",
      "description": "HCRL Twitter Clone: A platform for HCRL researchers to share and collaborate on research findings.",
      "image": "/content/x-clone.png",
      "links": "https://x-clone-xi.vercel.app",
      "technologies": [
        "Typescript",
        "Nextjs",
        "Nodejs",
        "TailwindCSS",
        "MongoDB"
      ],
      "position": "Full Stack Developer"
    },
    {
      "name": "SAIG Techmastery",
      "description": "SAIG Web Application for registered training session and submit project.",
      "image": "/content/saig-techmastery.png",
      "links": "https://techmastery.ce-saig.com/",
      "technologies": ["SvelteKit", "TailwindCSS"],
      "position": "Frontend Developer"
    },
    {
      "name": "CE Boostup XI Grader",
      "description": "This is a grader website for CE BoostUp XI. This website is used to practice programming skills.",
      "image": "/content/ce-boostupxi.png",
      "links": "https://github.com/khris-xp/boostupxi-web",
      "technologies": ["SvelteKit", "TailwindCSS", "Nextjs"],
      "position": "Frontend Developer"
    },
    {
      "name": "Youtube Clone",
      "description": "This project is a YouTube clone built with React, TypeScript, Tailwind CSS, and Material UI.",
      "image": "/content/youtube-clone.png",
      "links": "https://incomparable-liger-2b5f83.netlify.app/",
      "technologies": [
        "React",
        "Typescript",
        "TailwindCSS",
        "Material UI",
        "Youtube API"
      ],
      "position": "Frontend Developer"
    },
    {
      "name": "Real Estate Website",
      "description": "This project is a real estate website that includes features such as searching for properties, filtering, and sorting. It uses Next.js, TypeScript, Tailwind CSS, and the Rapid API.",
      "image": "/content/real-estate-web.png",
      "links": "https://sprightly-bonbon-a38c69.netlify.app/",
      "technologies": ["Typescript", "Nextjs", "Tailwindcss"],
      "position": "Frontend Developer"
    },
    {
      "name": "Pokedex Beginner",
      "description": "This project is a Pokedex that includes features such as searching for Pokemon. It uses Svelte, TypeScript, Tailwind CSS, and the PokeAPI.",
      "image": "/content/pokedex-beginner.png",
      "links": "https://pokedex-beginner.vercel.app/",
      "technologies": ["Svelte", "Typescript", "Tailwindcss"],
      "position": "Frontend Developer"
    }
  ]
}

================
File: src/content/skill.json
================
{
  "skills": [
    {
      "name": "HTML",
      "image": "https://cdn-icons-png.flaticon.com/512/1532/1532556.png",
      "category": "Frontend Development"
    },
    {
      "name": "CSS",
      "image": "https://cdn-icons-png.flaticon.com/512/732/732190.png",
      "category": "Frontend Development"
    },
    {
      "name": "JavaScript",
      "image": "https://www.svgrepo.com/show/349419/javascript.svg",
      "category": "Frontend Development"
    },
    {
      "name": "TypeScript",
      "image": "https://www.svgrepo.com/show/374146/typescript-official.svg",
      "category": "Frontend Development"
    },
    {
      "name": "React",
      "image": "https://www.svgrepo.com/show/493719/react-javascript-js-framework-facebook.svg",
      "category": "Frontend Development"
    },
    {
      "name": "Svelte",
      "image": "https://www.svgrepo.com/show/374109/svelte.svg",
      "category": "Frontend Development"
    },
    {
      "name": "Nextjs",
      "image": "https://www.svgrepo.com/show/378440/nextjs-fill.svg",
      "category": "Frontend Development"
    },
    {
      "name": "Vuejs",
      "image": "https://www.svgrepo.com/show/493625/vue-vuejs-javascript-js-framework.svg",
      "category": "Frontend Development"
    },
    {
      "name": "Node.js",
      "image": "https://www.svgrepo.com/show/303658/nodejs-1-logo.svg",
      "category": "Backend Development"
    },
    {
      "name": "Nestjs",
      "image": "https://www.svgrepo.com/show/373872/nestjs.svg",
      "category": "Backend Development"
    },
    {
      "name": "Golang",
      "image": "https://www.svgrepo.com/show/355038/golang.svg",
      "category": "Backend Development"
    },
    {
      "name": "MySQL",
      "image": "https://www.svgrepo.com/show/303251/mysql-logo.svg",
      "category": "Database"
    },
    {
      "name": "PostgreSQL",
      "image": "https://www.svgrepo.com/show/354200/postgresql.svg",
      "category": "Database"
    },
    {
      "name": "MongoDB",
      "image": "https://www.svgrepo.com/show/331488/mongodb.svg",
      "category": "Database"
    }
  ]
}

================
File: src/layouts/Layout.astro
================
---
import Navbar from "@components/Navbar.astro";
import Footer from "@components/Footer.astro";
interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Bai+Jamjuree&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <Navbar />
    <slot />
    <Footer />
  </body>
</html>

================
File: src/pages/certificate.astro
================
---
import Layout from '@layouts/Layout.astro';
import CertificateCard from '@components/CertificateCard.astro';
import certificate from '@content/certificate.json';

const certificateData = certificate.certificate;
---

<Layout title='Competition'>
  <div class='font-jamjuri'>
    <div class='flex justify-center text-4xl py-20 font-medium'>
      Certificate
    </div>
    <div class='flex justify-center mx-auto container mb-32 px-10'>
      <div class='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-16'>
        {
          certificateData.map((certificate) => (
            <CertificateCard
              key={certificate.name}
              name={certificate.name}
              position={certificate.position}
              image={certificate.image}
            />
          ))
        }
      </div>
    </div>
  </div>
</Layout>

================
File: src/pages/competition.astro
================
---
import Layout from '@layouts/Layout.astro';
import CompetitionCard from '@components/CompetitionCard.astro';
import competition from '@content/competition.json';

const competitionData = competition.competition;
---

<Layout title='Competition'>
  <div class='font-jamjuri'>
    <div class='flex justify-center text-4xl py-20 font-medium'>Competition</div>
    <div class='flex justify-center mx-auto container mb-32 px-10'>
      <div class='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-16'>
        {
          competitionData.map((competition) => (
            <CompetitionCard
              key={competition.name}
              name={competition.name}
              description={competition.description}
              duration={competition.duration}
              location={competition.location}
              position={competition.position}
              link={competition.link}
              image={competition.image}
            />
          ))
        }
      </div>
    </div>
  </div>
</Layout>

================
File: src/pages/index.astro
================
---
import Hero from '@components/Hero.astro';
import ProjectCard from '@components/ProjectCard.astro';
import Layout from '@layouts/Layout.astro';
import projects from '@content/projects.json';
import TimeLine from '@components/TimeLine.astro';
import About from '@components/About.astro';
import { fetchProject } from 'script/fetchProject';
import { fetchCompetition } from 'script/fetchCompetition';
import competition from '@content/competition.json';
import certificate from '@content/certificate.json';
import CompetitionCard from '@components/CompetitionCard.astro';
import CertificateCard from '@components/CertificateCard.astro';
import { fetchCertificate } from 'script/fetchCertificate';
import Skills from '@components/Skills.astro';

const projectsDataStatic = projects.projects;
const competitionDataStatic = competition.competition;
const certificateDataStatic = certificate.certificate;
const projectData = await fetchProject(projectsDataStatic);
const competitionData = await fetchCompetition(competitionDataStatic);
const certificateData = await fetchCertificate(certificateDataStatic);
---

<Layout title='Home'>
  <div class='font-jamjuri'>
    <Hero />
    <About />
    <div class='py-12 flex flex-col gap-4 container mx-auto'>
      <p class='text-sm text-designColor tracking-[4px] uppercase'>Feature</p>
      <h2 class='text-3xl md:text-4xl font-bold'>Development Skills</h2>
    </div>
    <div class='flex justify-center mx-auto container mb-16c'>
      <Skills />
    </div>
    <div class='py-12 flex flex-col gap-4 container mx-auto'>
      <p class='text-sm text-designColor tracking-[4px] uppercase'>Working</p>
      <h2 class='text-3xl md:text-4xl font-bold'>Working Experience</h2>
    </div>
    <div class='flex justify-center mx-auto container mb-16'>
      <TimeLine />
    </div>
    <div class='py-12 flex flex-col gap-4 container mx-auto'>
      <p class='text-sm text-designColor tracking-[4px] uppercase'>Project</p>
      <h2 class='text-3xl md:text-4xl font-bold'>Personal Project</h2>
    </div>
    <div class='flex justify-center mx-auto container px-10'>
      <div class='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-16'>
        {
          projectData.map((project) => (
            <ProjectCard
              key={project.name}
              name={project.name}
              link={project.links}
              image={project.image}
              technologies={project.technologies}
              position={project.position}
            />
          ))
        }
      </div>
    </div>
    <div
      class='flex justify-center text-2xl font-semibold text-blue-500 hover:text-blue-800 duration-200 hover:underline my-20'
    >
      <a href='/project'>Explore more project</a>
    </div>
    <div class='py-12 flex flex-col gap-4 container mx-auto'>
      <p class='text-sm text-designColor tracking-[4px] uppercase'>
        Competition
      </p>
      <h2 class='text-3xl md:text-4xl font-bold'>Competition and Event</h2>
    </div>
    <div class='flex justify-center mx-auto container px-10'>
      <div class='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-16'>
        {
          competitionData.map((competition) => (
            <CompetitionCard
              key={competition.name}
              name={competition.name}
              duration={competition.duration}
              location={competition.location}
              position={competition.position}
              link={competition.link}
              image={competition.image}
            />
          ))
        }
      </div>
    </div>
    <div
      class='flex justify-center text-2xl font-semibold text-blue-500 hover:text-blue-800 duration-200 hover:underline my-20'
    >
      <a href='/competition'>Explore more competition</a>
    </div>
    <div class='py-12 flex flex-col gap-4 container mx-auto'>
      <p class='text-sm text-designColor tracking-[4px] uppercase'>
        Certificate
      </p>
      <h2 class='text-3xl md:text-4xl font-bold'>Certificate and Bootcamp</h2>
    </div>
    <div class='flex justify-center mx-auto container px-10'>
      <div class='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-16'>
        {
          certificateData.map((certificateData) => (
            <CertificateCard
              key={certificateData.name}
              name={certificateData.name}
              position={certificateData.position}
              image={certificateData.image}
            />
          ))
        }
      </div>
    </div>
    <div
      class='flex justify-center text-2xl font-semibold text-blue-500 hover:text-blue-800 duration-200 hover:underline my-20'
    >
      <a href='/certificate'>Explore more certificate</a>
    </div>
  </div>
</Layout>

================
File: src/pages/project.astro
================
---
import Layout from '@layouts/Layout.astro';
import projects from '@content/projects.json';
import ProjectCard from '@components/ProjectCard.astro';

const projectData = projects.projects;
---

<Layout title='Project'>
  <div class='font-jamjuri'>
    <div class='flex justify-center text-4xl py-20 font-medium'>Projects</div>
    <div class='flex justify-center mx-auto container mb-32 px-10'>
      <div class='grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-16'>
        {
          projectData.map((project) => (
            <ProjectCard
              key={project.name}
              name={project.name}
              description={project.description}
              link={project.links}
              image={project.image}
              technologies={project.technologies}
              position={project.position}
            />
          ))
        }
      </div>
    </div>
  </div>
</Layout>

================
File: src/script/date.ts
================
export function calculateExperingDate(startDate: string, endDate: string) {
  const start = new Date(startDate);
  let end;
  if (endDate === 'Present') {
    end = new Date();
  } else {
    end = new Date(endDate);
  }

  const diff = end.getTime() - start.getTime();
  const years = Math.floor(diff / (1000 * 60 * 60 * 24 * 365));
  const months = Math.floor(
    (diff % (1000 * 60 * 60 * 24 * 365)) / (1000 * 60 * 60 * 24 * 30)
  );

  return years === 0
    ? months === 0
      ? 'Less than a month'
      : `${months} months`
    : months === 0
    ? `${years} years`
    : `${years} years ${months} months`;
}

================
File: src/script/fetchCertificate.ts
================
type TCertificate = {
    name: string;
    position: string;
    image: string;
}

export const fetchCertificate = async (certificate: TCertificate[]): Promise<TCertificate[]> => {
    return certificate.slice(0, 6);
}

================
File: src/script/fetchCompetition.ts
================
type TCompetition = {
    name: string;
    description: string;
    duration: string;
    location: string;
    position: string;
    image: string;
    link: string;
}

export const fetchCompetition = async (competition: TCompetition[]): Promise<TCompetition[]> => {
    return competition.slice(0, 6);
}

================
File: src/script/fetchProject.ts
================
type TProject = {
    name: string;
    description: string;
    image: string;
    links: string;
    technologies: string[];
    position: string;
}

export const fetchProject = async (projects: TProject[]): Promise<TProject[]> => {
    return projects.slice(0, 6);
}

================
File: src/types/competition.d.ts
================
export type TCompetition = {
    name: string;
    description: string;
    duration: string;
    location: string;
    position: string;
    image: string;
    link: string;
}

================
File: src/types/project.d.ts
================
export type TProject = {
    name: string;
    description: string;
    image: string;
    links: string;
    technologies: string[];
    position: string;
}

================
File: src/env.d.ts
================
/// <reference path="../.astro/types.d.ts" />
/// <reference types="astro/client" />

================
File: .gitignore
================
# build output
dist/

# generated types
.astro/

# dependencies
node_modules/

# logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# environment variables
.env
.env.production

# macOS-specific files
.DS_Store

================
File: astro.config.mjs
================
import { defineConfig } from 'astro/config';

import tailwind from "@astrojs/tailwind";

// https://astro.build/config
export default defineConfig({
  integrations: [tailwind()]
});

================
File: package.json
================
{
  "name": "khris-xp",
  "type": "module",
  "version": "0.0.1",
  "scripts": {
    "dev": "astro dev",
    "start": "astro dev",
    "build": "astro check && astro build",
    "preview": "astro preview",
    "astro": "astro"
  },
  "dependencies": {
    "@astrojs/check": "^0.3.1",
    "@astrojs/tailwind": "^5.0.2",
    "astro": "^3.6.3",
    "tailwindcss": "^3.0.24",
    "typescript": "^5.3.2"
  },
  "devDependencies": {
    "daisyui": "^4.4.14"
  }
}

================
File: README.md
================
# Astro Starter Kit: Basics

```sh
npm create astro@latest -- --template basics
```

[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/withastro/astro/tree/latest/examples/basics)
[![Open with CodeSandbox](https://assets.codesandbox.io/github/button-edit-lime.svg)](https://codesandbox.io/p/sandbox/github/withastro/astro/tree/latest/examples/basics)
[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/withastro/astro?devcontainer_path=.devcontainer/basics/devcontainer.json)

> 🧑‍🚀 **Seasoned astronaut?** Delete this file. Have fun!

![just-the-basics](https://github.com/withastro/astro/assets/2244813/a0a5533c-a856-4198-8470-2d67b1d7c554)

## 🚀 Project Structure

Inside of your Astro project, you'll see the following folders and files:

```text
/
├── public/
│   └── favicon.svg
├── src/
│   ├── components/
│   │   └── Card.astro
│   ├── layouts/
│   │   └── Layout.astro
│   └── pages/
│       └── index.astro
└── package.json
```

Astro looks for `.astro` or `.md` files in the `src/pages/` directory. Each page is exposed as a route based on its file name.

There's nothing special about `src/components/`, but that's where we like to put any Astro/React/Vue/Svelte/Preact components.

Any static assets, like images, can be placed in the `public/` directory.

## 🧞 Commands

All commands are run from the root of the project, from a terminal:

| Command                   | Action                                           |
| :------------------------ | :----------------------------------------------- |
| `npm install`             | Installs dependencies                            |
| `npm run dev`             | Starts local dev server at `localhost:4321`      |
| `npm run build`           | Build your production site to `./dist/`          |
| `npm run preview`         | Preview your build locally, before deploying     |
| `npm run astro ...`       | Run CLI commands like `astro add`, `astro check` |
| `npm run astro -- --help` | Get help using the Astro CLI                     |

## 👀 Want to learn more?

Feel free to check [our documentation](https://docs.astro.build) or jump into our [Discord server](https://astro.build/chat).

================
File: tailwind.config.mjs
================
import daisyui from 'daisyui';

/** @type {import('tailwindcss').Config} */
export default {
  content: ['./src/**/*.{astro,html,js,jsx,md,mdx,svelte,ts,tsx,vue}'],
  theme: {
    extend: {
      fontFamily: {
        jamjuri: ['Bai Jamjuree', ' sans-serif'],
      },
    },
  },
  plugins: [daisyui],
  daisyui: {
    themes: ['light'],
    darkTheme: 'light',
  },
};

================
File: tsconfig.json
================
{
  "extends": "astro/tsconfigs/strict",
  "compilerOptions": {
		"target": "ESNext",
		"module": "ESNext",
		// Enable node-style module resolution, for things like npm package imports.
		"moduleResolution": "node",
		// Enable JSON imports.
		"resolveJsonModule": true,
		// Enable stricter transpilation for better output.
		"isolatedModules": true,
		// Astro will directly run your TypeScript code, no transpilation needed.
		"noEmit": true,
		"strictNullChecks": true,
		"baseUrl": "src",
		"paths": {
			"@lib/*": ["lib/*"],
			"@utils/*": ["utils/*"],
			"@components/*": ["components/*"],
			"@layouts/*": ["layouts/*"],
			"@assets/*": ["assets/*"],
			"@pages/*": ["pages/*"],
      "@types/*": ["types/*"],
      "@content/*": ["content/*"],
		}
	}
}
