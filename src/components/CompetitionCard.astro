---
const { name, duration, location, position, image, link } = Astro.props;
---

<a
  href={link}
  class="hackathon-card group relative bg-white rounded-2xl overflow-hidden border border-gray-100"
>
  <div class="relative flex flex-col h-full">
    <div class="relative">
      <div class="absolute inset-0 z-10 tech-pattern opacity-20"></div>
      <div class="aspect-[16/9] overflow-hidden">
        <img
          src={image}
          alt={name}
          class="w-full h-full object-cover transform transition-all duration-700 group-hover:scale-105"
          loading="lazy"
        />
        <div
          class="absolute inset-0 bg-gradient-to-t from-black/80 via-black/30 to-transparent opacity-0 group-hover:opacity-100 transition-all duration-500"
        >
        </div>
      </div>
      <div class="absolute top-4 left-4 z-20 flex items-center space-x-2">
        <div class="prize-badge">
          <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
            <path d="M10 12a2 2 0 100-4 2 2 0 000 4z"></path>
            <path
              fill-rule="evenodd"
              d="M10 18a8 8 0 100-16 8 8 0 000 16zm0-2a6 6 0 100-12 6 6 0 000 12z"
              clip-rule="evenodd"></path>
          </svg>
          <span>Prizes</span>
        </div>
        <div class="live-badge">
          <span class="pulse-dot"></span>
          <span>Live</span>
        </div>
      </div>
    </div>

    <div class="relative p-6 flex-1 bg-white z-20">
      <div class="position-tag">
        {position}
      </div>

      <h3
        class="mt-3 text-xl font-bold text-gray-900 group-hover:text-indigo-600 transition-colors duration-300"
      >
        {name}
      </h3>

      <div class="mt-4 space-y-3">
        <div class="flex items-center text-gray-600">
          <div class="icon-wrapper">
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <span class="text-sm ml-2">{duration}</span>
        </div>

        <div class="flex items-center text-gray-600">
          <div class="icon-wrapper">
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"
              ></path>
            </svg>
          </div>
          <span class="text-sm ml-2">{location}</span>
        </div>
      </div>

      <div class="mt-6">
        <div class="action-button">
          <span>View Challenge</span>
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
          </svg>
        </div>
      </div>
    </div>

    <div class="card-border"></div>
  </div>
</a>

<style>
  .hackathon-card {
    @apply transition-all duration-500 hover:-translate-y-2 hover:shadow-xl;
    animation: cardReveal 0.8s cubic-bezier(0.22, 1, 0.36, 1) forwards;
  }

  .tech-pattern {
    background-image: linear-gradient(
        30deg,
        #4f46e5 12%,
        transparent 12.5%,
        transparent 87%,
        #4f46e5 87.5%,
        #4f46e5
      ),
      linear-gradient(
        150deg,
        #4f46e5 12%,
        transparent 12.5%,
        transparent 87%,
        #4f46e5 87.5%,
        #4f46e5
      ),
      linear-gradient(
        30deg,
        #4f46e5 12%,
        transparent 12.5%,
        transparent 87%,
        #4f46e5 87.5%,
        #4f46e5
      ),
      linear-gradient(
        150deg,
        #4f46e5 12%,
        transparent 12.5%,
        transparent 87%,
        #4f46e5 87.5%,
        #4f46e5
      ),
      linear-gradient(
        60deg,
        #7c3aed77 25%,
        transparent 25.5%,
        transparent 75%,
        #7c3aed77 75%,
        #7c3aed77
      ),
      linear-gradient(
        60deg,
        #7c3aed77 25%,
        transparent 25.5%,
        transparent 75%,
        #7c3aed77 75%,
        #7c3aed77
      );
    background-size: 20px 35px;
    background-position:
      0 0,
      0 0,
      10px 18px,
      10px 18px,
      0 0,
      10px 18px;
  }

  .prize-badge {
    @apply flex items-center px-3 py-1 text-sm font-medium rounded-full
           bg-yellow-400/90 text-yellow-900
           transform transition-all duration-300;
    backdrop-filter: blur(4px);
  }

  .live-badge {
    @apply flex items-center px-3 py-1 text-sm font-medium rounded-full
           bg-green-500/90 text-white
           transform transition-all duration-300;
    backdrop-filter: blur(4px);
  }

  .pulse-dot {
    @apply w-2 h-2 rounded-full bg-white mr-2;
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  .position-tag {
    @apply inline-flex px-3 py-1 text-sm font-medium rounded-lg
           bg-indigo-50 text-indigo-600
           transition-all duration-300;
  }

  .icon-wrapper {
    @apply p-1.5 rounded-lg bg-gray-50
           transform transition-all duration-300
           group-hover:bg-indigo-50 group-hover:text-indigo-600;
  }

  .action-button {
    @apply flex items-center justify-between
           px-4 py-2 rounded-xl
           text-sm font-medium
           bg-gray-50 text-gray-600
           transform transition-all duration-300
           hover:bg-indigo-600 hover:text-white;
  }

  .card-border {
    @apply absolute inset-0 rounded-2xl opacity-0
           transition-opacity duration-500
           group-hover:opacity-100;
    background: linear-gradient(
      145deg,
      rgba(79, 70, 229, 0.5) 0%,
      rgba(124, 58, 237, 0.5) 100%
    );
    mask:
      linear-gradient(#fff 0 0) content-box,
      linear-gradient(#fff 0 0);
    mask-composite: exclude;
    padding: 1px;
  }

  @keyframes cardReveal {
    0% {
      opacity: 0;
      transform: translateY(30px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  @keyframes pulse {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }

  .hackathon-card:hover .prize-badge {
    @apply scale-105 bg-yellow-400;
  }

  .hackathon-card:hover .live-badge {
    @apply scale-105 bg-green-500;
  }

  .hackathon-card:hover .position-tag {
    @apply bg-indigo-100;
  }

  .hackathon-card::after {
    content: "";
    position: absolute;
    left: 5%;
    right: 5%;
    bottom: -10px;
    height: 90%;
    background: linear-gradient(
      180deg,
      rgba(79, 70, 229, 0.2) 0%,
      transparent 100%
    );
    filter: blur(20px);
    border-radius: inherit;
    z-index: -1;
    opacity: 0;
    transition: all 0.5s;
  }

  .hackathon-card:hover::after {
    opacity: 1;
    transform: translateY(10px);
  }
</style>

<script>
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          (entry.target as HTMLElement).style.animationDelay =
            `${index * 0.15}s`;
          entry.target.classList.add("show");
        }
      });
    },
    {
      threshold: 0.1,
      rootMargin: "50px",
    }
  );

  document.querySelectorAll(".hackathon-card").forEach((card) => {
    observer.observe(card);
  });
</script>
